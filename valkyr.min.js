// ==========================================================================
// Project:   Valkyr.js - JavaScript Separation Of Concerns
// Copyright: Copyright 2014 Lukas Alexandre
// License:   Licensed under MIT license
//            See https://github.com/lukelex/valkyr.js/blob/master/LICENSE
// ==========================================================================

// Version: 0.1.0 | From: 05-02-2014

window.valkyr={},function(){function a(a){this.$$name=a.name,this.$$message=a.message,this.$$validator=a.validator}a.$build=function(a,b){var c=window.valkyr.predefinedRules[a];return c?c:new window.valkyr.CustomRule(b)},a.prototype.$check=function(a,b){var c={isOk:this.$$validator(b)};return c.isOk||(c.message=this.$$message.replace(/\%s/,a)),c},window.valkyr.Rule=a}(),function(){function a(a,c){if(!a)throw"Missing form";if(!c)throw"Missing constraints";if(!(c instanceof Array))throw"Constraints must be an array";this.$$form=a,this.$$constraints=b(a,c),this.errors={},this.$setupSubmission()}function b(a,b){var d,e;for(d=[],e=b.length;e--;)d.push(new window.valkyr.Constraint(c(a,b[e].name),b[e]));return d}function c(a,b){return a.querySelector('input[name="'+b+'"]')}function d(a){a&&a.preventDefault?a.preventDefault():window.event&&(window.event.returnValue=!1)}a.prototype.$setupSubmission=function(){this.$$originalSubmit=this.$$form.onsubmit,this.$$form.onsubmit=function(a){return function(b){return a.isValid()?void 0===a.$$originalSubmit||a.$$originalSubmit(b):void d(b)}}(this)},a.prototype.validate=function(){var a,b;for(this.errors={},a=this.$$constraints.length;a--;)b=this.$$constraints[a].$validate(),b.errors.length>0&&(this.errors[b.name]=b.errors)},a.prototype.isValid=function(){return this.validate(),0===Object.keys(this.errors).length},a.prototype.submit=function(){return this.isValid()?void(this.$$originalSubmit&&this.$$originalSubmit()):!1},a.prototype.whenValid=function(){},a.prototype.whenInvalid=function(a){a(this.$$errors)},window.valkyr.Validator=a}(),function(){function a(a,c){this.$$field=a,this.$$name=c.name,this.$$display=c.display,this.$$rules=b(c.rules)}function b(a){var b,c,d;for(c=a.split("|"),d=[],b=c.length;b--;)d.push(window.valkyr.Rule.$build(c[b]));return d}a.prototype.$validate=function(){var a,b;for(b={name:this.$$name,errors:[]},a=this.$$rules.length;a--;)verification=this.$$rules[a].$check(this.$$name,this.$$field.value),verification.isOk||b.errors.push(verification.message);return b},window.valkyr.Constraint=a}(),function(){function a(a){if(!a)throw"Rule configuration can't be empty";this.$$name=a.name,this.$$message=a.message,this.$$validator=a.validator}a.prototype.$check=function(a){var b={isOk:this.$$validator(a)};return b.isOk||(b.message=this.$$message.replace(/\%s/,fieldName)),b},window.valkyr.CustomRule=a}(),function(){var a={};a.presence=new window.valkyr.Rule({name:"presence",message:"The %s field can't be empty.",validator:function(a){return a?a.length>0:!1}}),a.email=new window.valkyr.Rule({name:"emailFormat",message:"The %s field must contain a valid email address.",validator:function(){return searchText.match(/^[a-zA-Z0-9.!#$%&amp;'*+\-\/=?\^_`{|}~\-]+@[a-zA-Z0-9\-]+(?:\.[a-zA-Z0-9\-]+)*$/)}}),window.valkyr.predefinedRules=a}();