// ==========================================================================
// Project:   Valkyr.js - The power of judgment over your forms!
// Copyright: Copyright 2014 Lukas Alexandre
// License:   Licensed under MIT license
//            See https://github.com/lukelex/valkyr.js/blob/master/LICENSE
// ==========================================================================

// Version: 0.2.1 | From: 22-02-2014

window.valkyr={customRules:{}},function(){Function.prototype.method=function(a,b){return this.hasOwnProperty(a)?void 0:(this.prototype[a]=b,this)}}(),function(){function a(a){var b=window.valkyr.predefinedRules.$find(a)||window.valkyr.customRules[a];if(!b)throw"Rule "+a+" does not exist!";return b}window.valkyr.rule=function(b){function c(b){return b?a(b):{check:function(){return{isOk:!0}}}}function d(a,c){return b.inheritanceRule.check(a,c).isOk&&b.validator(c)}return b.inheritanceRule=c(b.inherits),b.setParams=function(){return b},b.getExtraInfo=function(){return b},b.check=function(a,c){var e={isOk:d(a,c)};return e.isOk||(e.message=b.message.replace(/\%s/,a)),e},b},window.valkyr.rule.build=function(a){var b=window.valkyr.rule(a);return window.valkyr.customRules[a.name]=b,b},window.valkyr.rule.retrieve=a}(),window.valkyr.comparisonRule=function(a){var b=window.valkyr.rule(a);return b.setParams=function(a){return b.params=a,b},b.check=function(a,c){var d={isOk:b.validator(c,b.comparedTo.value)};return d.isOk||(d.message=b.message.replace(/\%s/,a),d.message=d.message.replace(/\%s/,b.params)),d},b.getExtraInfo=function(a){return b.comparedTo=a[b.params],b},b},window.valkyr.parameterRule=function(a){var b=window.valkyr.rule(a);return b.setParams=function(a){return b.params=a,b},b.check=function(a,c){var d={isOk:b.validator(c,b.params)};return d.isOk||(d.message=b.message.replace(/\%s/,a),d.message=d.message.replace(/\%s/,b.params)),d},b},function(){function a(a,c){if(!a)throw"Missing form";if(!c)throw"Missing constraints";if(!(c instanceof Array))throw"Constraints must be an array";this.$$form=a,this.$$constraints=b(a,c),this.errors={},this.$setupSubmission()}function b(a,b){var c,d;for(c=[],d=b.length;d--;)c.push(window.valkyr.constraint(a,b[d]));return c}function c(a){a&&a.preventDefault?a.preventDefault():window.event&&(window.event.returnValue=!1)}a.method("$setupSubmission",function(){this.$$originalSubmit=this.$$form.onsubmit,this.$$form.onsubmit=function(a){return function(b){return a.isValid()?!!a.$$originalSubmit&&a.$$originalSubmit(b):void c(b)}}(this)}),a.method("validate",function(a){a?this.$validateField(a):this.$validateAllFields()}),a.method("$validateField",function(a,b){var c;b||(b=this.$constraintFor(a)),c=b.validate(),c.errors.length>0?this.errors[c.name]=c.errors:delete this.errors[c.name]}),a.method("$validateAllFields",function(){var a;for(this.errors={},a=this.$$constraints.length;a--;)this.$validateField(null,this.$$constraints[a])}),a.method("$constraintFor",function(a){for(var b=this.$$constraints.length;b--;)if(this.$$constraints[b].field()==a)return this.$$constraints[b]}),a.method("isValid",function(){var a=!1;return this.validate(),a=0===Object.keys(this.errors).length,!a&&this.$$onError&&this.$$onError(this.errors),a}),a.method("submit",function(a){return a&&a.skipValidations===!0||this.isValid()?void(this.$$originalSubmit&&this.$$originalSubmit()):!1}),a.method("onError",function(a){return this.$$onError=a,this}),window.valkyr.Validator=a}(),window.valkyr.constraint=function(a,b){function c(){if(g())return j.checked;if(h())for(var a=j.length;a--;)if(j[a].checked)return j[a].value;return j.value}function d(a){var b,c={};for(b=a.length;b--;){var d=a[b];if(Object.prototype.hasOwnProperty.call(c,d))throw"Duplicate rule declaration!";c[d]=!0}}function e(a,b){return a[b]}function f(a,b){var c,d;for(d=a.split(i),c=d.length;c--;)k.push(window.valkyr.rule.retrieve(d[c]).getExtraInfo(b))}function g(){return"INPUT"===j.nodeName&&"checkbox"===j.type}function h(){return j instanceof window.NodeList?"INPUT"===j[0].nodeName&&"radio"===j[0].type:!1}var i,j,k;return i="|",d(b.rules.split(i)),k=[],j=e(a,b.name),f(b.rules,a),b.field=function(){return j},b.validate=function(){var a,d,e;for(d={name:b.name,errors:[]},a=k.length;a--;)e=k[a].check(b.as||b.name,c()),e.isOk||d.errors.push(e.message);return d},b},function(){function a(a){var b=a.match(/\[(.+?)\]$/);return b&&(b=b[1]),{name:a.match(/^.+?(?=\[.+?\])/)||a,params:b}}var b={},c={$find:function(c){var d,e;return d=a(c),(e=b[d.name])&&e.setParams(d.params),e}};window.valkyr.predefinedRules=c,b.minLength=window.valkyr.parameterRule({name:"minLength",message:"The %s field must be at least %s characters in length.",validator:function(a,b){return a.length>=b}}),b.maxLength=window.valkyr.parameterRule({name:"maxLength",message:"The %s field must not exceed %s characters in length.",validator:function(a,b){return a.length<=b}}),b.exactLength=window.valkyr.parameterRule({name:"exactLength",message:"The %s field must be exactly %s characters in length.",validator:function(a,b){return a.length===b}}),b.required=window.valkyr.rule({name:"required",message:"The %s field can't be empty.",validator:function(a){return a&&a!==!1?a===!0?!0:a.length>0:!1}}),b.email=window.valkyr.rule({name:"emailFormat",inherits:"required",message:"The %s field must contain a valid email address.",validator:function(a){return!!a.match(/^([0-9a-zA-Z]([-\.\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\w]*[0-9a-zA-Z]\.)+[a-zA-Z]{2,9})$/)}}),b.url=window.valkyr.rule({name:"url",inherits:"required",message:"The %s field must contain a valid URL.",validator:function(a){return!!a.match(/^((http|https):\/\/(\w+:{0,1}\w*@)?(\S+)|)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?$/)}}),b.numeric=window.valkyr.rule({name:"number",message:"The %s field must be a number.",validator:function(a){return!isNaN(parseFloat(a))&&isFinite(a)}}),b.integer=window.valkyr.rule({name:"integer",inherits:"numeric",message:"The %s field must contain an integer.",validator:function(a){return!!a.match(/^\-?[0-9]+$/)}}),b.decimal=window.valkyr.rule({name:"decimal",inherits:"numeric",message:"The %s field must contain a decimal number.",validator:function(a){return!!a.match(/^\-?[0-9]*\.[0-9]+$/)}}),b.natural=window.valkyr.rule({name:"natural",inherits:"numeric",message:"The %s field must contain only positive numbers.",validator:function(a){return!!a.match(/^[0-9]+$/i)}}),b.alphabetical=window.valkyr.rule({name:"alphabetical",inherits:"required",message:"The %s field must only contain alphabetical characters.",validator:function(a){return!!a.match(/^[a-z]+$/i)}}),b.equals=window.valkyr.comparisonRule({name:"equals",inherits:"required",message:"The %s field needs to be equal to %s field.",validator:function(a,b){return a===b}}),b["credit-card"]=window.valkyr.rule({name:"creditCardNumber",inherits:"required",message:"The %s field doesn't have a valid credit-card number.",validator:function(a){var b,c,d,e;for(b=a.length,c=0,d=[[0,1,2,3,4,5,6,7,8,9],[0,2,4,6,8,1,3,5,7,9]],e=0;b--;)e+=d[c][parseInt(a.charAt(b),10)],c^=1;return e%10===0&&e>0}}),b.ip=window.valkyr.rule({name:"IP",inherits:"required",message:"The %s field must contain a valid IP.",validator:function(a){return!!a.match(/^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})$/i)}})}(),function(){window.Validator=window.valkyr.Validator}();