// ==========================================================================
// Project:   Valkyr.js - JavaScript Separation Of Concerns
// Copyright: Copyright 2014 Lukas Alexandre
// License:   Licensed under MIT license
//            See https://github.com/lukelex/valkyr.js/blob/master/LICENSE
// ==========================================================================

// Version: 0.1.0 | From: 06-02-2014

window.valkyr={customRules:{}},function(){function a(a){this.$$name=a.name,this.$$message=a.message,this.$$validator=a.validator}a.$retrieve=function(a){var b=window.valkyr.predefinedRules.$find(a)||window.valkyr.customRules[a];if(!b)throw"Rule "+a+" does not exist!";return b},a.prototype.$params=function(a){return this.$$params=a,this},window.valkyr.BaseRule=a}(),function(){function a(a){this.$$name=a.name,this.$$message=a.message,this.$$validator=a.validator}a.prototype.$params=function(a){return this.$$params=a,this},a.prototype.$check=function(a,b){var c={isOk:this.$$validator(b,this.$$comparedTo.value)};return c.isOk||(c.message=this.$$message.replace(/\%s/,a),c.message=c.message.replace(/\%s/,this.$$params)),c},a.prototype.$getExtraInfo=function(a){return this.$$comparedTo=a.querySelector('input[name="'+this.$$params+'"]'),this},window.valkyr.ComparisonRule=a}(),function(){function a(a){this.$$name=a.name,this.$$message=a.message,this.$$validator=a.validator}a.prototype.$params=function(a){return this.$$params=a,this},a.prototype.$check=function(a,b){var c={isOk:this.$$validator(b)};return c.isOk||(c.message=this.$$message.replace(/\%s/,a)),c},a.prototype.$getExtraInfo=function(){return this},window.valkyr.Rule=a}(),function(){function a(a,c){if(!a)throw"Missing form";if(!c)throw"Missing constraints";if(!(c instanceof Array))throw"Constraints must be an array";this.$$form=a,this.$$constraints=b(a,c),this.errors={},this.$setupSubmission()}function b(a,b){var c,d;for(c=[],d=b.length;d--;)c.push(new window.valkyr.Constraint(a,b[d]));return c}function c(a){a&&a.preventDefault?a.preventDefault():window.event&&(window.event.returnValue=!1)}a.prototype.$setupSubmission=function(){this.$$originalSubmit=this.$$form.onsubmit,this.$$form.onsubmit=function(a){return function(b){return a.isValid()?void 0===a.$$originalSubmit||a.$$originalSubmit(b):void c(b)}}(this)},a.prototype.validate=function(){var a,b;for(this.errors={},a=this.$$constraints.length;a--;)b=this.$$constraints[a].$validate(),b.errors.length>0&&(this.errors[b.name]=b.errors)},a.prototype.isValid=function(){var a=!1;return this.validate(),a=0===Object.keys(this.errors).length,!a&&this.$$onError&&this.$$onError(this.errors),a},a.prototype.submit=function(){return this.isValid()?void(this.$$originalSubmit&&this.$$originalSubmit()):!1},a.prototype.onError=function(a){this.$$onError=a},a.prototype.whenValid=function(){},a.prototype.whenInvalid=function(a){a(this.$$errors)},window.valkyr.Validator=a}(),function(){function a(a,d){this.$$name=d.name,this.$$display=d.display,this.$$field=b(a,this.$$name),this.$$rules=c(d.rules,a)}function b(a,b){return a.querySelector('input[name="'+b+'"]')}function c(a,b){var c,d,e;for(d=a.split("|"),e=[],c=d.length;c--;)e.push(window.valkyr.BaseRule.$retrieve(d[c]).$getExtraInfo(b));return e}a.prototype.$validate=function(){var a,b;for(b={name:this.$$name,errors:[]},a=this.$$rules.length;a--;)verification=this.$$rules[a].$check(this.$$name,this.$$field.value),verification.isOk||b.errors.push(verification.message);return b},window.valkyr.Constraint=a}(),function(){function a(a){if(!a)throw"Rule configuration can't be empty";this.$$name=a.name,this.$$message=a.message,this.$$validator=a.validator}a.prototype.$check=function(a){var b={isOk:this.$$validator(a)};return b.isOk||(b.message=this.$$message.replace(/\%s/,fieldName)),b},window.valkyr.CustomRule=a}(),function(){function a(a){var b=a.match(/\[(.+?)\]$/);return b&&(b=b[1]),{name:a.match(/^.+?(?=\[.+?\])/)||a,params:b}}var b={},c={$find:function(c){var d,e;return d=a(c),(e=b[d.name])&&e.$params(d.params),e}};b.equals=new window.valkyr.ComparisonRule({name:"equals",message:"The %s field to be equal to %s field.",validator:function(a,b){return a===b}}),b.numeric=new window.valkyr.Rule({name:"number",message:"The %s field must be a number.",validator:function(a){return!isNaN(parseFloat(a))&&isFinite(a)}}),b.required=new window.valkyr.Rule({name:"required",message:"The %s field can't be empty.",validator:function(a){return a?a.length>0:!1}}),b.email=new window.valkyr.Rule({name:"emailFormat",message:"The %s field must contain a valid email address.",validator:function(a){return a?!!a.match(/^([0-9a-zA-Z]([-\.\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\w]*[0-9a-zA-Z]\.)+[a-zA-Z]{2,9})$/):!1}}),b.url=new window.valkyr.Rule({name:"url",message:"The %s field must contain a valid URL.",validator:function(a){return a?!!a.match(/^((http|https):\/\/(\w+:{0,1}\w*@)?(\S+)|)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?$/):!1}}),b.integer=new window.valkyr.Rule({name:"integer",message:"The %s field must contain an integer.",validator:function(a){return a?!!a.match(/^\-?[0-9]+$/):!1}}),b.decimal=new window.valkyr.Rule({name:"decimal",message:"The %s field must contain a decimal number.",validator:function(a){return a?!!a.match(/^\-?[0-9]*\.[0-9]+$/):!1}}),b.natural=new window.valkyr.Rule({name:"natural",message:"The %s field must contain only positive numbers.",validator:function(a){return a?!!a.match(/^[0-9]+$/i):!1}}),b.alphabetical=new window.valkyr.Rule({name:"alphabetical",message:"The %s field must only contain alphabetical characters.",validator:function(a){return a?!!a.match(/^[a-z]+$/i):!1}}),window.valkyr.predefinedRules=c}();